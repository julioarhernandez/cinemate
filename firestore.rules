
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read/write their own profile and other authenticated users can read basic info
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // This nested allow is tricky. The outer one takes precedence. Let's simplify.
    }
     match /users/{userId} {
      // Allow reading basic user data for friend features
      allow get: if request.auth != null;
      // Allow listing users for search
      allow list: if request.auth != null;
    }

    // Friend requests
    match /friendRequests/{requestId} {
      allow list, read: if request.auth != null && (resource.data.to == request.auth.uid || resource.data.from == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.from == request.auth.uid;
      // Allow recipient to accept/decline or sender to cancel (delete)
      allow update, delete: if request.auth != null && (resource.data.to == request.auth.uid || resource.data.from == request.auth.uid);
    }

    // Friends lists
    match /users/{userId}/friends/{friendId} {
      // A user can read their own friends list
      allow read: if request.auth.uid == userId;
      // A user can read if they ARE a friend on someone else's list (needed for activity feeds)
      allow read: if exists(/databases/$(database)/documents/users/$(userId)/friends/$(request.auth.uid));
      // A user can only write/delete their own friends list
      allow write, delete: if request.auth.uid == userId;
		}
    
    // Ratings & Watched list
    match /users/{userId}/ratings/{ratingId} {
       // A user can read/write their own ratings.
      allow read, write: if request.auth.uid == userId;
      // A friend can read a rating only if it is not private.
      allow read: if exists(/databases/$(database)/documents/users/$(userId)/friends/$(request.auth.uid)) && resource.data.isPrivate != true;
    }

    // AI Recommendations history (generated by user)
    match /users/{userId}/recommendations/{recommendationId} {
       allow read, write: if request.auth.uid == userId;
    }

    // User-sent recommendations history
    match /users/{userId}/sentRecommendations/{recommendationId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Incoming recommendations from friends
    match /users/{userId}/incomingRecommendations/{recommendationId} {
      allow read, write: if request.auth.uid == userId;
    }
  }
}

    